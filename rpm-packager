#!/bin/bash
. .env

# Verif build file exist
if [[ ! -f "$BUILD_OUTPUT" ]]; then
    echo "You should run ./builder first !"
    exit 1
fi

# Package the .deb file
echo "----------- PACKAGING START"

# Clean previous build
rm "$OUTPUT/$MODULE_NAME.rpm" 2> /dev/null
rm -r "$RPM_FOLDER/SOURCES" "$RPM_FOLDER/SRPMS" "$RPM_FOLDER/BUILD"  "$RPM_FOLDER/RPMS" "$RPM_FOLDER/BUILDROOT" 2> /dev/null

# Create folders
mkdir "$RPM_FOLDER/SOURCES" "$RPM_FOLDER/SRPMS" "$RPM_FOLDER/BUILD"  "$RPM_FOLDER/RPMS" "$RPM_FOLDER/BUILDROOT"

# Extract the tar 
cp "$BUILD_OUTPUT" "$RPM_FOLDER/SOURCES"

# Package
mkdir "$OUTPUT"  2> /dev/null
rpmbuild --bb "builds/rpm/SPECS/$MODULE_NAME.spec" --buildroot "$RPM_FOLDER/BUILDROOT" > /dev/null 2>&1
if [[ $? -eq 0 ]]; then
    echo "----------- PACKAGING Success"
    cp "$RPM_FOLDER/RPMS/noarch/$MODULE_NAME"* "$OUTPUT/webserver-deployer.rpm" 
else
    echo "----------- PACKAGING ERROR"
    echo "ABORTED."
    exit 1
fi